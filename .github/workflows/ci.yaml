name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ published ]

jobs:
  test:
    name: Run tests
    strategy:
      matrix:
        python-version: [3.6, 3.7]
        os: [ubuntu, macos, windows]
      fail-fast: false
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Install python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"    # - name: dir
      - name: Cache PyPI
        uses: actions/cache@v2
        with:
          key: pip-ci-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('setup.py', 'requirements/*.txt') }}
          path: ${{ steps.pip-cache.outputs.dir }}
          restore-keys: |
              pip-ci-${{ runner.os }}-${{ matrix.python-version }}-
      - name: Install dependencies
        run: |
          make setup
      - name: Configure environment
        run: |
          neuro config login-with-token ${{ secrets.NEURO_TOKEN }} ${{ secrets.NEURO_STAGING_URL }}
          neuro config show
      - name: Lint
        run: |
          make lint
      - name: Run e2e tests
        run: |
          make test_e2e
  devpi_deploy:
    name: Release client
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'release'
    env:
      DOCKER_SERVER: docker.io
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Install python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: Install dependencies
        run: |
          python -m pip install twine wheel
          make setup
      - name: Make dists
        run: |
          python setup.py sdist bdist_wheel
      - name: PyPI upload
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          twine upload dist/*
      - name: Build image
        run: make build
      - name: Push image
        run: |
          export TAG=${GITHUB_REF#refs/tags/}

          docker login $DOCKER_SERVER --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
          docker tag neuromation/neuro-extras:latest neuromation/neuro-extras:$TAG
          docker push neuromation/neuro-extras:$TAG
          docker push neuromation/neuro-extras:latest
